1. Self introducion
2. Projects
3. Programming language: 
    Python 
    Shell sed awk
4. Algorithms: LinkList BiTree
	1. LinkList:
		1. How to judge whether two linklists will cross?
		2. Write a programme to reverse a linklist.
	2. Bitree:
		1. Write a programme to inOrderTraverse a bitree without recursion.
    3. Sort
5. Design Pattern
6. Describe the procedure of booting
7. The most impressive challenge
8. The greatest contribution/ excellent work
9. English oral
10. What would you expect for the new job? / What is your plan for the next few
years?



linux cmd:
	as bc dig objdump hexdump readelf strace cal df du ls date touch who last w
	whoami yum uname

	system managerment:
		sysctl	
	others:
		grep -r abc *       #grep from all the sub directories
		bc: obase=16;ibase=16 tips:must set obase first.
			obase=16;ibase=A	  should be 'A' rather than '10'
			scale=5				  3/5=.60000
		pdftk nce4.pdf cat 1 5 output 2.pdf #extracting page 1 and page 5 from
											#nce4.pdf into a new 2.pdf
		netstat -natp
		lsof -i :80
    tshark:
    	tshark -i br0 -w a.cap -f 'port 8080'
    	tshark -xVr a.cap | less
    vi:
    	<C-o> + zz  "quickly draw screen to the middle"
    screen
        set screen under `gnu screen' refresh after quitting from vim and some other tools.
       	    uncomment the `altscreen on' in the `/etc/screenrc' file.
        pageup in gnu screen
        	C-A Esc


sed:

awk:

shell:

python:

English:
	rebel stuffy stumble patriot traitor impede tamper condemn scandal stun
	tragedy overtake distraught inconsolable honest farewell repatriate intact
	bond sole decline recline cosy dispute standoff evacuate reformer dictator
	sanction separatist unrest religion regional condolence casualty

	lash out at-	stay put-

