#
# IMPORTS
#


#
# CONSTANTS
#


#
# CODE
#


# ------------------------------------------------------------------------------
# Create an overlay because the squashfs and cow contents
#
# @type  $1: string
# @param $1: current root device
#
# @type  $2: string
# @param $2: path to tarball file that contains the zKVM repo
#
# @type  $3: string
# @param $3: path to where the zKVM repo should be created
#
# @type  $4: string
# @param $4: path to where zKVM ISO image is mounted
# ------------------------------------------------------------------------------
union_squashfs_cow() {
    local currentRootDev="$1"
    local tarRepo="$2"
    local repoDir="$3"
    local source="$4"
    local disk=${currentRootDev%?}

    local mountpoint=`mktemp -d`
    local squashfs=`mktemp -d`
    local cow=`mktemp -d`
    local union=`mktemp -d`
    local data=`mktemp -d`
    local unionrw="$data/cow-`date +%Y%m%d%s`"

    # mount current root device
    mount $currentRootDev $mountpoint

    # newrootfs.img exists: use it
    if [ -e $mountpoint/newrootfs.img ]; then
        local rootfs="$mountpoint/newrootfs.img"
    # newrootfs.img does not exist: use rootfs.img
    else
        local rootfs="$mountpoint/rootfs.img"
    fi

    mount -o loop -t squashfs $rootfs $squashfs
    mount $disk"5" $cow
    mount $disk"7" $data

    # create union between squashfs image and cow partition content
    funionfs -o dirs=$squashfs=ro:$cow=ro NONE $union

    # create work directory
    mkdir -p $unionrw/

    # copy union file system to a read-write place
    cp -a $union/. $unionrw/

    umount $union $squashfs
    rm -rf $union $squashfs

    # create a copy of the cow partition content
    cd $cow && tar -czf $mountpoint/cow-bkp.tar.gz . &>/dev/null
    if [ $? -ne 0 ]; then
        return 1
    fi
    cd - &>/dev/null

    umount $cow $mountpoint
    rm -rf $cow $mountpoint

    # setup YUM repository
    chroot $unionrw/ mkdir -p $repoDir
    chroot $unionrw/ mknod -m 644 /dev/urandom c 1 9
    tar -xzp --numeric-owner -f $tarRepo -C $unionrw/$repoDir/

    # Update zKVM files
    files=`cat $source/opt/ibm/zkvm-installer/ui/backend/config/update-files.cfg`
    cd /$source
    for f in $files; do
        cp -a --parents ./$f $unionrw/
    done

    echo $unionrw
}
